diff --git a/cid-api-django/cidAPI/core/models/models_3d.py b/cid-api-django/cidAPI/core/models/models_3d.py
index 04e3f90..2d70034 100644
--- a/cid-api-django/cidAPI/core/models/models_3d.py
+++ b/cid-api-django/cidAPI/core/models/models_3d.py
@@ -12,7 +12,7 @@ class Model3D(models.Model):
     # Many models many owners, seems reasonable to me
     owners = models.ManyToManyField(User, related_name='owners')
 
-    date_uploaded = models.DateTimeField()
+    date_uploaded = models.DateTimeField(auto_now_add=True)
     
     # Many models many people who like them.
     favorited_by = models.ManyToManyField(User, related_name='favorited_by')
diff --git a/cid-api-django/cidAPI/core/serializers.py b/cid-api-django/cidAPI/core/serializers.py
index 546c95a..441d9e2 100644
--- a/cid-api-django/cidAPI/core/serializers.py
+++ b/cid-api-django/cidAPI/core/serializers.py
@@ -28,7 +28,7 @@ class CommentSerializer(serializers.ModelSerializer):
 
 
 class PostSerializer(serializers.ModelSerializer):
-    comments = CommentSerializer(many=True)
+    comments = CommentSerializer(many=True, read_only=True)
 
     class Meta:
         model = Post
@@ -43,48 +43,18 @@ class PostSerializer(serializers.ModelSerializer):
             'likes',
         )
     
-    def create(self, validated_data):
+    # def create(self, validated_data):
 
-        comments_data = validated_data.pop('comments')
-        post = Post.objects.create(**validated_data)
+    #     comments_data = validated_data.pop('comments')
+    #     post = Post.objects.create(**validated_data)
 
-        for comment_data in comments_data:
-            Comment.objects.create(post=post, **comment_data)
+    #     for comment_data in comments_data:
+    #         Comment.objects.create(post=post, **comment_data)
         
-        return album
+    #     return album
 
 #### End of Post Serializers
 
-#### 3D model serializers
-
-class CommitSerializer(serializers.ModelSerializer):
-    class Meta:
-        model = Commit
-        fields = (
-            'belongs_to_model',
-            'commited_by',
-            'details',
-            'date',
-            'polygons_changed'
-        )
-
-
-class Model3DSerializer(serializers.ModelSerializer):
-    commits = CommitSerializer(many=True)
-
-    class Meta:
-        model = Model3D
-        fields = (
-            'id',
-            'filename',
-            'owners',
-            'date_uploaded',
-            'favorited_by',
-            'polygons',
-        )
-
-#### End of 3D Models Serializers
-
 #### User Serializers
 
 class ProfileSerializer(serializers.ModelSerializer):
@@ -149,3 +119,42 @@ class RegisterUser(serializers.ModelSerializer):
         return created_user
 
 ### End of User Serializers
+
+#### 3D model serializers
+
+class CommitSerializer(serializers.ModelSerializer):
+    class Meta:
+        model = Commit
+        fields = (
+            'belongs_to_model',
+            'commited_by',
+            'details',
+            'date',
+            'polygons_changed'
+        )
+
+from django.contrib.auth import get_user_model
+
+class Model3DSerializer(serializers.ModelSerializer):
+
+
+    User = get_user_model()
+
+    commits = CommitSerializer(many=True, required=False,read_only=True)
+    favorited_by = UserSerializer(many=True, required=False, read_only=True)
+    date_uploaded = serializers.DateTimeField(read_only=True)
+    owners = serializers.PrimaryKeyRelatedField(many=True, read_only=True)
+
+    class Meta:
+        model = Model3D
+        fields = (
+            'id',
+            'filename',
+            'owners',
+            'date_uploaded',
+            'favorited_by',
+            'polygons',
+            'commits'
+        )
+
+#### End of 3D Models Serializers
\ No newline at end of file
diff --git a/cid-api-django/cidAPI/core/urls.py b/cid-api-django/cidAPI/core/urls.py
index 8a826c5..aeba408 100644
--- a/cid-api-django/cidAPI/core/urls.py
+++ b/cid-api-django/cidAPI/core/urls.py
@@ -3,18 +3,20 @@ from django.urls import path, re_path
 from rest_framework.authtoken.views import obtain_auth_token
 
 from .views.users import Users, ListAllUsers, RegisterUser
-from .views.posts import ListAllPosts
-from .views.models_3d import Models3D
+from .views.posts import ListCreatePosts, Posts
+from .views.models_3d import Models3D, ListAllModels3D
 
 urlpatterns = [
     # Main URIs
     path('login/', obtain_auth_token),    
     path('register/', RegisterUser.as_view()),    
-    path('feed/', ListAllPosts.as_view()),
-    
+    path('posts/', ListCreatePosts.as_view()),
+    path('3d-models/', ListAllModels3D.as_view()),
+
     # Users URIs
     path('users/', ListAllUsers.as_view()),
     re_path(r'^user/(?P<pk>[0-9]+)/$', Users.as_view()),
+    re_path(r'^user/(?P<pk>[0-9]+)/posts/$', Posts.as_view()),
     re_path(r'^user/(?P<pk>[0-9]+)/3d-models/$', Models3D.as_view())
     # user/id/posts
     # user/id/commits
diff --git a/cid-api-django/cidAPI/core/views/models_3d.py b/cid-api-django/cidAPI/core/views/models_3d.py
index 7c039ca..cf8cb69 100644
--- a/cid-api-django/cidAPI/core/views/models_3d.py
+++ b/cid-api-django/cidAPI/core/views/models_3d.py
@@ -3,12 +3,36 @@ from django.http import Http404
 
 from rest_framework.views import APIView
 from rest_framework.response import Response
-from rest_framework import status, permissions, generics
+from rest_framework import status, permissions, generics, mixins
 
 from ..models.models_3d import Model3D
 from ..serializers import Model3DSerializer
+import pprint
 
-class Models3D(generics.ListAPIView):
-    # TODO This should not be all, but only for the user whoose id I've asked
+
+class ListAllModels3D(generics.ListAPIView):
     queryset = Model3D.objects.all()
-    serializer_class = Model3DSerializer
\ No newline at end of file
+    serializer_class = Model3DSerializer
+
+class Models3D(mixins.ListModelMixin,
+                  mixins.CreateModelMixin,
+                  generics.GenericAPIView):
+    serializer_class = Model3DSerializer
+    def get_queryset(self):
+        user_pk = self.kwargs["pk"]
+        return Model3D.objects.filter(owners__in=[user_pk])
+
+    def get(self, request, *args, **kwargs):
+        return self.list(request, *args, **kwargs)
+
+    def post(self, request, *args, **kwargs):
+        print(request.data, kwargs)
+        return self.create(request, *args, **kwargs)
+
+    def perform_create(self, serializer):
+        # FIXME: this is a bad way to set the value, but ...
+        user_id = self.kwargs["pk"]
+        serializer.validated_data['owners'] = [user_id]
+
+        serializer.save()
+
diff --git a/cid-api-django/cidAPI/core/views/posts.py b/cid-api-django/cidAPI/core/views/posts.py
index 54d4b7f..e436394 100644
--- a/cid-api-django/cidAPI/core/views/posts.py
+++ b/cid-api-django/cidAPI/core/views/posts.py
@@ -8,16 +8,18 @@ from rest_framework import status, permissions, generics
 from ..models.post import Post
 from ..serializers import PostSerializer
 
-class ListAllPosts(generics.ListAPIView):
+
+class ListCreatePosts(generics.ListAPIView, generics.CreateAPIView):
     queryset = Post.objects.all()
     serializer_class = PostSerializer
 
 # Gotta do something to differentiate a user's posts and such
 
-class CreatePost(generics.CreateAPIView):
-    queryset = Post.objects.all()
-    serializer_class = PostSerializer
+
 
 class Posts(generics.RetrieveUpdateDestroyAPIView):
-    queryset = Post.objects.all()
+    def get_queryset(self):
+        user_pk = self.kwargs["pk"]
+        return Post.objects.filter(posted_by=user_pk)
+
     serializer_class = PostSerializer
